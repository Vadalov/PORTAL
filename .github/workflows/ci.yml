name: CI Pipeline

on:
  push:
    branches:
      - main
      - master
      - develop
      - 'claude/**'
  pull_request:
    branches:
      - main
      - master
      - develop

jobs:
  verify-lockfile:
    name: Verify lockfile sync
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Verify package-lock.json is in sync with package.json
        run: |
          echo "Verifying package.json and package-lock.json are in sync..."
          if ! npm ci --dry-run > /dev/null 2>&1; then
            echo "❌ ERROR: package.json and package-lock.json are out of sync!"
            echo ""
            echo "To fix this issue:"
            echo "  1. Run 'npm install' locally"
            echo "  2. Commit the updated package-lock.json"
            echo "  3. Push your changes"
            echo ""
            exit 1
          fi
          echo "✅ package.json and package-lock.json are in sync"

  lint:
    name: ESLint
    runs-on: ubuntu-latest
    needs: [verify-lockfile]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: Upload ESLint results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: eslint-results
          path: eslint-report.json
          if-no-files-found: ignore

  typecheck:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    needs: [verify-lockfile]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript compiler
        run: npm run typecheck
        continue-on-error: true

  test:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    needs: [verify-lockfile]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:run

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/
          if-no-files-found: ignore

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: ./coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          # Mock environment variables for build
          NEXT_PUBLIC_APPWRITE_ENDPOINT: https://cloud.appwrite.io/v1
          NEXT_PUBLIC_APPWRITE_PROJECT_ID: test-project-id
          NEXT_PUBLIC_DATABASE_ID: test-db
          NEXT_PUBLIC_STORAGE_DOCUMENTS: documents
          NEXT_PUBLIC_STORAGE_RECEIPTS: receipts
          NEXT_PUBLIC_STORAGE_PHOTOS: photos
          NEXT_PUBLIC_STORAGE_REPORTS: reports

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: .next/
          retention-days: 7

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for security vulnerabilities
        run: npm audit --json > npm-audit.json
        continue-on-error: true

      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-audit
          path: npm-audit.json
          if-no-files-found: ignore
