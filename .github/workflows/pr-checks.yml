name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  pr-info:
    name: PR Information
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false
        continue-on-error: true

      - name: PR size labeler
        uses: codelytv/pr-size-labeler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: 'size/xs'
          xs_max_size: 10
          s_label: 'size/s'
          s_max_size: 100
          m_label: 'size/m'
          m_max_size: 500
          l_label: 'size/l'
          l_max_size: 1000
          xl_label: 'size/xl'
        continue-on-error: true

  code-review:
    name: Automated Code Review
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for console.log statements
        run: |
          if git diff origin/${{ github.base_ref }}...HEAD -- '*.ts' '*.tsx' '*.js' '*.jsx' | grep -E '^\+.*console\.(log|debug|info|warn)'; then
            echo "::warning::Found console.log statements in the changes"
          fi
        continue-on-error: true

      - name: Check for TODO comments
        run: |
          if git diff origin/${{ github.base_ref }}...HEAD -- '*.ts' '*.tsx' '*.js' '*.jsx' | grep -E '^\+.*(TODO|FIXME|HACK)'; then
            echo "::warning::Found TODO/FIXME/HACK comments in the changes"
          fi
        continue-on-error: true

      - name: Check file sizes
        run: |
          git diff origin/${{ github.base_ref }}...HEAD --name-only | while read file; do
            if [ -f "$file" ]; then
              size=$(wc -l < "$file")
              if [ "$size" -gt 500 ]; then
                echo "::warning file=$file::File has $size lines (>500 lines suggests it might be too large)"
              fi
            fi
          done
        continue-on-error: true

  dependency-check:
    name: Dependency Changes Check
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check package.json changes
        id: package-check
        run: |
          if git diff origin/${{ github.base_ref }}...HEAD --name-only | grep -q 'package.json'; then
            echo "package_changed=true" >> $GITHUB_OUTPUT
            echo "::notice::package.json was modified in this PR"
          fi

      - name: Check for new dependencies
        if: steps.package-check.outputs.package_changed == 'true'
        run: |
          git diff origin/${{ github.base_ref }}...HEAD -- package.json | grep '^\+' | grep -E '"[^"]+": "' || echo "No new dependencies"

  test-coverage:
    name: Test Coverage Check
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage
        continue-on-error: true

      - name: Coverage report
        uses: davelosert/vitest-coverage-report-action@v2
        if: always()
        with:
          json-summary-path: ./coverage/coverage-summary.json
          json-final-path: ./coverage/coverage-final.json
        continue-on-error: true

  build-check:
    name: Build Verification
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_APPWRITE_ENDPOINT: https://cloud.appwrite.io/v1
          NEXT_PUBLIC_APPWRITE_PROJECT_ID: test-project-id
          NEXT_PUBLIC_DATABASE_ID: test-db
          NEXT_PUBLIC_STORAGE_DOCUMENTS: documents
          NEXT_PUBLIC_STORAGE_RECEIPTS: receipts
          NEXT_PUBLIC_STORAGE_PHOTOS: photos
          NEXT_PUBLIC_STORAGE_REPORTS: reports

      - name: Check build size
        run: |
          if [ -d ".next" ]; then
            size=$(du -sh .next | cut -f1)
            echo "::notice::Build size: $size"
          fi
